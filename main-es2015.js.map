{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/components/private-tasks/private-tasks.component.ts","./src/app/components/private-tasks/private-tasks.component.html","./src/app/components/signin/signin.component.ts","./src/app/components/signin/signin.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/components/tasks/tasks.component.ts","./src/app/components/tasks/tasks.component.html","./src/app/services/auth.service.ts","./src/app/services/tasks.service.ts","./src/app/services/token-interceptor.service.ts","./src/app/shared/baseURL.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n//components\nimport { PrivateTasksComponent } from './components/private-tasks/private-tasks.component'\nimport { SigninComponent } from './components/signin/signin.component'\nimport { SignupComponent } from './components/signup/signup.component'\nimport { TasksComponent } from './components/tasks/tasks.component'\nimport { AuthGuard } from './auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/tasks',\n    pathMatch: 'full'\n  },\n  {\n    path: 'tasks',\n    component: TasksComponent\n  },\n  {\n    path: 'private',\n    component: PrivateTasksComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'signup',\n    component: SignupComponent\n  },\n  {\n    path: 'signin',\n    component: SigninComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n\n  constructor(public authService: AuthService) {}\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\">Simple AWS</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/tasks\" routerLinkActive=\"active\">Tasks</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/private\" routerLinkActive=\"active\">Private</a>\n        </li>\n      </ul>\n      <ul class=\"navbar-nav ml-auto\">\n        <ng-container *ngIf=\"!authService.loggedIn(); else loggedIn\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/signin\" routerLinkActive=\"active\">SignIn</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/signup\" routerLinkActive=\"active\">SignUp</a>\n          </li>\n        </ng-container>\n        <ng-template #loggedIn>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" style=\"cursor: pointer;\" (click)=\"authService.logout()\">Logout</a>\n          </li>\n        </ng-template>\n      </ul>\n    </div>\n  </div>\n</nav>\n\n\n<div class=\"container p-5\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { TasksComponent } from './components/tasks/tasks.component';\nimport { PrivateTasksComponent } from './components/private-tasks/private-tasks.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthGuard } from './auth.guard';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    SigninComponent,\n    TasksComponent,\n    PrivateTasksComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './services/auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService,\n    private router: Router) {}\n\n  canActivate() {\n    if(this.authService.loggedIn()){\n      return true;\n    }\n\n    this.router.navigate(['/signin']);\n    return false;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { TasksService } from 'src/app/services/tasks.service';\n\n@Component({\n  selector: 'app-private-tasks',\n  templateUrl: './private-tasks.component.html',\n  styleUrls: ['./private-tasks.component.css']\n})\nexport class PrivateTasksComponent implements OnInit {\n\n  tasks\n\n  constructor(private tasksService: TasksService) { }\n\n  ngOnInit(): void {\n    this.tasksService.getPrivateTasks()\n    .subscribe((res: any) => {\n      this.tasks = res.body\n    }, err => {\n      console.log(err)\n    })\n  }\n\n}\n","<h1>Private Tasks</h1>\n\n<ul class=\"list-group\">\n    <li class=\"list-group-item\" *ngFor=\"let task of tasks\">\n        {{task._id}} - {{task.name}}: {{task.description}}\n    </li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  emailFC = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  passwordFC = new FormControl('', [\n    Validators.required,\n  ]);\n\n  constructor(private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  signIn() {\n    if(this.emailFC.value === \"\") {\n      return\n    }\n    if(this.passwordFC.value === \"\") {\n      return\n    }\n    this.authService.signIn({email:this.emailFC.value, password: this.passwordFC.value})\n    .subscribe((res: any) => {\n      localStorage.setItem('token', res.body.token)\n      this.router.navigate(['/private'])\n    }, err => {\n      console.log(err)\n    })\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-4 mx-auto\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                SignIn\n            </div>\n            <div class=\"card-body\">\n                <form (submit)=\"signIn()\">\n                    <!--div class=\"form-group\">\n                        <input type=\"text\" [(ngModel)]=\"user.email\" name=\"email\" class=\"form-control\" placeholder=\"Email\" required autofocus>\n                    </div-->\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label>Email</mat-label>\n                        <input matInput name=\"email\" [formControl]=\"emailFC\" placeholder=\"Ej. email@ejemplo.com\">\n                        <mat-error *ngIf=\"emailFC.hasError('email') && !emailFC.hasError('required')\">\n                            Por favor ingrese un email valido.\n                        </mat-error>\n                        <mat-error name=\"err-email\" *ngIf=\"emailFC.hasError('required')\">\n                            Email es <strong>obligatorio</strong>\n                        </mat-error>\n                    </mat-form-field>\n                    <!--div class=\"form-group\">\n                        <input type=\"password\" [(ngModel)]=\"user.password\" name=\"password\" class=\"form-control\" placeholder=\"Password\" required>\n                    </div-->\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label>Password</mat-label>\n                        <input matInput name=\"password\" [formControl]=\"passwordFC\" placeholder=\"Password\">\n                        <mat-error name=\"err-password\" *ngIf=\"passwordFC.hasError('required')\">\n                            La contraseña es <strong>obligatoria</strong>\n                        </mat-error>\n                    </mat-form-field>\n                    <button type=\"submit\" name=\"signin\" class=\"btn btn-primary btn-block\">\n                        SignIn\n                    </button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  user = {\n    email: '',\n    password: ''\n  }\n\n  constructor(private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  signUp() {\n    this.authService.signUp(this.user)\n    .subscribe((res: any) => {\n      localStorage.setItem('token', res.body.token)\n      this.router.navigate(['/private'])\n    }, err => {\n      console.log(err);\n    })\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-4 mx-auto\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                SignUp\n            </div>\n            <div class=\"card-body\">\n                <form (submit)=\"signUp()\">\n                    <div class=\"form-group\">\n                        <input type=\"text\" [(ngModel)]=\"user.email\" name=\"email\" class=\"form-control\" placeholder=\"Email\" required autofocus>\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"password\" [(ngModel)]=\"user.password\" name=\"password\" class=\"form-control\" placeholder=\"Password\" required>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary btn-block\">\n                        SignUp\n                    </button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TasksService } from 'src/app/services/tasks.service';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n\n  tasks = []\n\n  constructor(private tasksService: TasksService) { }\n\n  ngOnInit(): void {\n    this.tasksService.getTasks()\n    .subscribe((res: any) => {\n      this.tasks = res.body\n    },err => {\n      console.log(err);\n    })\n  }\n\n}\n","<ul class=\"list-group\" name=\"list-tasks\">\n    <li class=\"list-group-item\" *ngFor=\"let task of tasks\">\n        {{task._id}} - {{task.name}}: {{task.description}}\n    </li>\n</ul>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Router } from '@angular/router';\nimport { baseURL} from '../shared/baseURL';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n  constructor(private http: HttpClient,\n    private router: Router) { }\n\n  signUp(user) {\n    return this.http.post(baseURL + 'user/signup',user);\n  }\n\n  signIn(user) {\n    return this.http.post(baseURL + 'user/signin',user);\n  }\n\n  loggedIn() {\n    return !!localStorage.getItem('token');\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  logout() {\n    localStorage.removeItem('token')\n    this.router.navigate(['/signin'])\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { baseURL} from '../shared/baseURL';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TasksService {\n\n  constructor(private http: HttpClient) { }\n\n  getTasks() {\n    return this.http.get(baseURL + 'task/tasks')\n  }\n\n  getPrivateTasks() {\n    return this.http.get(baseURL + 'private-task/private-tasks')\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private authService: AuthService) { }\n\n  intercept(req, next) {\n    const tokenizeReq =req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.authService.getToken()}`\n      }\n    })\n    return next.handle(tokenizeReq)\n  }\n}\n","export const baseURL = 'https://m03qrnypc0.execute-api.us-east-2.amazonaws.com/api/';\r\nexport const baseServerless = '';","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}