{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/components/private-tasks/private-tasks.component.ts","webpack:///src/app/components/private-tasks/private-tasks.component.html","webpack:///src/app/components/signin/signin.component.ts","webpack:///src/app/components/signin/signin.component.html","webpack:///src/app/components/signup/signup.component.ts","webpack:///src/app/components/signup/signup.component.html","webpack:///src/app/components/tasks/tasks.component.ts","webpack:///src/app/components/tasks/tasks.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/tasks.service.ts","webpack:///src/app/services/token-interceptor.service.ts","webpack:///src/app/shared/baseURL.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","authService","AppComponent","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","router","loggedIn","navigate","providedIn","PrivateTasksComponent","tasksService","getPrivateTasks","subscribe","res","tasks","body","err","console","log","SigninComponent","emailFC","required","email","passwordFC","value","signIn","password","localStorage","setItem","token","SignupComponent","user","signUp","TasksComponent","getTasks","AuthService","http","post","getItem","removeItem","TasksService","get","TokenInterceptorService","next","tokenizeReq","clone","setHeaders","Authorization","getToken","handle","baseURL","baseServerless","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n//components\nimport { PrivateTasksComponent } from './components/private-tasks/private-tasks.component'\nimport { SigninComponent } from './components/signin/signin.component'\nimport { SignupComponent } from './components/signup/signup.component'\nimport { TasksComponent } from './components/tasks/tasks.component'\nimport { AuthGuard } from './auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/tasks',\n    pathMatch: 'full'\n  },\n  {\n    path: 'tasks',\n    component: TasksComponent\n  },\n  {\n    path: 'private',\n    component: PrivateTasksComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'signup',\n    component: SignupComponent\n  },\n  {\n    path: 'signin',\n    component: SigninComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n\n  constructor(public authService: AuthService) {}\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\">Simple AWS</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/tasks\" routerLinkActive=\"active\">Tasks</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/private\" routerLinkActive=\"active\">Private</a>\n        </li>\n      </ul>\n      <ul class=\"navbar-nav ml-auto\">\n        <ng-container *ngIf=\"!authService.loggedIn(); else loggedIn\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/signin\" routerLinkActive=\"active\">SignIn</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/signup\" routerLinkActive=\"active\">SignUp</a>\n          </li>\n        </ng-container>\n        <ng-template #loggedIn>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" style=\"cursor: pointer;\" (click)=\"authService.logout()\">Logout</a>\n          </li>\n        </ng-template>\n      </ul>\n    </div>\n  </div>\n</nav>\n\n\n<div class=\"container p-5\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { TasksComponent } from './components/tasks/tasks.component';\nimport { PrivateTasksComponent } from './components/private-tasks/private-tasks.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthGuard } from './auth.guard';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    SigninComponent,\n    TasksComponent,\n    PrivateTasksComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './services/auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService,\n    private router: Router) {}\n\n  canActivate() {\n    if(this.authService.loggedIn()){\n      return true;\n    }\n\n    this.router.navigate(['/signin']);\n    return false;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { TasksService } from 'src/app/services/tasks.service';\n\n@Component({\n  selector: 'app-private-tasks',\n  templateUrl: './private-tasks.component.html',\n  styleUrls: ['./private-tasks.component.css']\n})\nexport class PrivateTasksComponent implements OnInit {\n\n  tasks\n\n  constructor(private tasksService: TasksService) { }\n\n  ngOnInit(): void {\n    this.tasksService.getPrivateTasks()\n    .subscribe((res: any) => {\n      this.tasks = res.body\n    }, err => {\n      console.log(err)\n    })\n  }\n\n}\n","<h1>Private Tasks</h1>\n\n<ul class=\"list-group\">\n    <li class=\"list-group-item\" *ngFor=\"let task of tasks\">\n        {{task._id}} - {{task.name}}: {{task.description}}\n    </li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  emailFC = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  passwordFC = new FormControl('', [\n    Validators.required,\n  ]);\n\n  constructor(private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  signIn() {\n    if(this.emailFC.value === \"\") {\n      return\n    }\n    if(this.passwordFC.value === \"\") {\n      return\n    }\n    this.authService.signIn({email:this.emailFC.value, password: this.passwordFC.value})\n    .subscribe((res: any) => {\n      localStorage.setItem('token', res.body.token)\n      this.router.navigate(['/private'])\n    }, err => {\n      console.log(err)\n    })\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-4 mx-auto\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                SignIn\n            </div>\n            <div class=\"card-body\">\n                <form (submit)=\"signIn()\">\n                    <!--div class=\"form-group\">\n                        <input type=\"text\" [(ngModel)]=\"user.email\" name=\"email\" class=\"form-control\" placeholder=\"Email\" required autofocus>\n                    </div-->\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label>Email</mat-label>\n                        <input matInput name=\"email\" [formControl]=\"emailFC\" placeholder=\"Ej. email@ejemplo.com\">\n                        <mat-error *ngIf=\"emailFC.hasError('email') && !emailFC.hasError('required')\">\n                            Por favor ingrese un email valido.\n                        </mat-error>\n                        <mat-error name=\"err-email\" *ngIf=\"emailFC.hasError('required')\">\n                            Email es <strong>obligatorio</strong>\n                        </mat-error>\n                    </mat-form-field>\n                    <!--div class=\"form-group\">\n                        <input type=\"password\" [(ngModel)]=\"user.password\" name=\"password\" class=\"form-control\" placeholder=\"Password\" required>\n                    </div-->\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label>Password</mat-label>\n                        <input matInput name=\"password\" [formControl]=\"passwordFC\" placeholder=\"Password\">\n                        <mat-error name=\"err-password\" *ngIf=\"passwordFC.hasError('required')\">\n                            La contraseña es <strong>obligatoria</strong>\n                        </mat-error>\n                    </mat-form-field>\n                    <button type=\"submit\" name=\"signin\" class=\"btn btn-primary btn-block\">\n                        SignIn\n                    </button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  user = {\n    email: '',\n    password: ''\n  }\n\n  constructor(private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  signUp() {\n    this.authService.signUp(this.user)\n    .subscribe((res: any) => {\n      localStorage.setItem('token', res.body.token)\n      this.router.navigate(['/private'])\n    }, err => {\n      console.log(err);\n    })\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-4 mx-auto\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                SignUp\n            </div>\n            <div class=\"card-body\">\n                <form (submit)=\"signUp()\">\n                    <div class=\"form-group\">\n                        <input type=\"text\" [(ngModel)]=\"user.email\" name=\"email\" class=\"form-control\" placeholder=\"Email\" required autofocus>\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"password\" [(ngModel)]=\"user.password\" name=\"password\" class=\"form-control\" placeholder=\"Password\" required>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary btn-block\">\n                        SignUp\n                    </button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TasksService } from 'src/app/services/tasks.service';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n\n  tasks = []\n\n  constructor(private tasksService: TasksService) { }\n\n  ngOnInit(): void {\n    this.tasksService.getTasks()\n    .subscribe((res: any) => {\n      this.tasks = res.body\n    },err => {\n      console.log(err);\n    })\n  }\n\n}\n","<ul class=\"list-group\" name=\"list-tasks\">\n    <li class=\"list-group-item\" *ngFor=\"let task of tasks\">\n        {{task._id}} - {{task.name}}: {{task.description}}\n    </li>\n</ul>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Router } from '@angular/router';\nimport { baseURL} from '../shared/baseURL';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n  constructor(private http: HttpClient,\n    private router: Router) { }\n\n  signUp(user) {\n    return this.http.post(baseURL + 'user/signup',user);\n  }\n\n  signIn(user) {\n    return this.http.post(baseURL + 'user/signin',user);\n  }\n\n  loggedIn() {\n    return !!localStorage.getItem('token');\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  logout() {\n    localStorage.removeItem('token')\n    this.router.navigate(['/signin'])\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { baseURL} from '../shared/baseURL';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TasksService {\n\n  constructor(private http: HttpClient) { }\n\n  getTasks() {\n    return this.http.get(baseURL + 'task/tasks')\n  }\n\n  getPrivateTasks() {\n    return this.http.get(baseURL + 'private-task/private-tasks')\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private authService: AuthService) { }\n\n  intercept(req, next) {\n    const tokenizeReq =req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.authService.getToken()}`\n      }\n    })\n    return next.handle(tokenizeReq)\n  }\n}\n","export const baseURL = 'https://m03qrnypc0.execute-api.us-east-2.amazonaws.com/api/';\r\nexport const baseServerless = '';","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}